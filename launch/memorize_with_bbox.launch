<launch>

  <arg name="img" default="/rs_l515/color/image_raw" />
  <arg name="mask_img" default="/mask_rcnn_instance_segmentation/output/viz" />
  <arg name="cloud" default="/rs_l515/depth_registered/points" />
  <arg name="camera_info" default="/rs_l515/camera_info" />
  <arg name="input_indices" default="/mask_rcnn_instance_segmentation/output/cluster_indices" />

  <node name="extract_indices" pkg="jsk_pcl_ros" type="extract_indices">
    <remap from="~input" to="$(arg cloud)" />
    <remap from="~indices" to="$(arg input_indices)" />
    <rosparam>
      keep_organized: true
    </rosparam>
  </node>
  
  <node name="multi_euclidean_clustering"
        pkg="nodelet" type="nodelet"
        args="standalone jsk_pcl/EuclideanClustering"
        output="screen">
    <remap from="~input/cluster_indices" to="$(arg input_indices)" />
    <remap from="~input" to="$(arg cloud)" />
    <rosparam subst_value="true">
      tolerance: 0.02
      min_size: 0
      max_size: 307200
      approximate_sync: true
      multi: true
      queue_size: 100
      cluster_filter: 1  <!-- take max size of clustering in each cluster -->
    </rosparam>
  </node>
  <!-- downsample_enable: $(arg downsample) -->
  <node name="multi_euclidean_cluster_point_indices_decomposer"
        pkg="nodelet" type="nodelet"
        args="standalone jsk_pcl/ClusterPointIndicesDecomposer">
    <remap from="~input" to="$(arg cloud)" />
    <remap from="~target" to="/multi_euclidean_clustering/output" />
    <rosparam>
      align_boxes: false
      use_pca: true
      approximate_sync: false
      queue_size: 100
    </rosparam>
  </node>
  
  <node name="memorize" pkg="memorization" type="memorize.py" output="screen">
    <remap from="~bbox" to="/multi_euclidean_cluster_point_indices_decomposer/boxes" />
    <remap from="~slave_rarm_pose" to="/test_publisher/slave_rarm_pose" />
    <remap from="~slave_larm_pose" to="/test_publisher/slave_larm_pose" />
    <rosparam>
      keep_organized: true
    </rosparam>
  </node>

</launch>
